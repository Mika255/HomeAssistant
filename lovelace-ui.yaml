title: Home
kiosk_mode:
  user_settings:
    - users:
        - tablet
      hide_sidebar: true
      kiosk: true
sidebar:
  digitalClock: true
  date: true
  style: |
    .date {
      font-size: 32px;
      margin-left: 6px;
    }
    .sidebarMenu li {
      font-weight: 200!important;
    }
    .sidebarMenu li.active {
      font-weight: 400!important;
    }
  width:
    mobile: 0
    tablet: 25
    desktop: 25
  sidebarMenu:
    - action: navigate
      navigation_path: /dashboard-tablet/home
      name: Home
      active: true
      icon: mdi:home
    - action: navigate
      navigation_path: /dashboard-tablet/heizungen
      name: Heizungen
      active: true
      icon: mdi:thermometer-low
    - action: navigate
      navigation_path: /dashboard-tablet/steuerung
      name: Steuerung
      active: true
      icon: mdi:lamp-outline
    - action: navigate
      navigation_path: /dashboard-tablet/strom
      name: Strom
      active: true
      icon: mdi:lightning-bolt-outline
    - action: navigate
      navigation_path: /dashboard-tablet/energie
      name: Energie
      active: true
      icon: mdi:chart-histogram
    - action: navigate
      navigation_path: /dashboard-tablet/lichter
      name: Lichter
      active: true
      icon: mdi:lamps-outline
    - action: navigate
      navigation_path: /dashboard-tablet/pflanzen
      name: Pflanzen
      active: true
      icon: mdi:flower
  bottomCard:
    type: weather-forecast
    cardOptions:
      name: Home
      show_forecast: true
      entity: weather.forecast_home
      tap_action:
        action: navigate
        navigation_path: /dashboard-tablet/wetter
    cardStyle: |
      :host {
        width: 100%;
        position: relative;
        bottom: 0;
        left: 0;
      }
      ha-card {
        font-weight: 200;
        padding: none;
        width: 110%;
        border: none;
        background: none;
        overflow: hidden !important;
        box-shadow: none !important;
        ha-card-border-radius: 0px;
        margin-top: -16px;
        margin-right: -10px;
        margin-left: -10px;        
      }
views:
  - theme: ios-dark-mode
    title: Overview
    path: home
    icon: mdi:home
    type: custom:grid-layout
    badges: []
    layout:
      grid-template-columns: 60% 40%
      grid-template-rows: auto
      grid-template-areas: |
        "header header"
        "left right"
        "todo right"
        "footer footer"
    cards:
      - type: custom:mushroom-chips-card
        view_layout:
          grid-area: header
        card_mod:
          style: |
            ha-card {
              --chip-font-weight: 200!important;
              --chip-box-shadow: none;
              --chip-background: none;
              --chip-border-radius: 10px;
            }
        chips:
          - type: template
            content: Spülmaschine
            entity: input_select.spulmaschine_status
            tap_action:
              action: more-info
            icon: >-
              {% if is_state('input_select.spulmaschine_status', 'Fertig') %}
               mdi:dishwasher-alert
              {% elif is_state('input_select.spulmaschine_status', 'Trocknung')
              %}
                mdi:dishwasher
              {% elif is_state('input_select.spulmaschine_status', 'Wäscht') %}
                mdi:dishwasher
              {% else %}
                mdi:dishwasher-off
              {% endif %}
            icon_color: >-
              {% if is_state('input_select.spulmaschine_status', 'Fertig') %}
               blue
              {% elif is_state('input_select.spulmaschine_status', 'Wäscht') %}
                orange
              {% elif is_state('input_select.spulmaschine_status', 'Trocknung')
              %}
                orange
              {% else %}
                grey
              {% endif %}
          - type: template
            content: Waschmaschine
            entity: input_select.waschmaschine_status
            tap_action:
              action: more-info
            icon: |-
              {% if is_state('input_select.waschmaschine_status', 'Fertig') %}
               mdi:washing-machine-alert
              {% elif is_state('input_select.waschmaschine_status', 'Wäscht') %}
                mdi:washing-machine
              {% else %}
                mdi:washing-machine-off
              {% endif %}
            icon_color: |-
              {% if is_state('input_select.waschmaschine_status', 'Fertig') %}
               blue
              {% elif is_state('input_select.waschmaschine_status', 'Wäscht') %}
                orange
              {% else %}
                grey
              {% endif %}
          - type: template
            content: Badezimmer
            entity: binary_sensor.bz_fensterkontakt_state
            tap_action:
              action: more-info
            icon: |-
              {% if is_state('binary_sensor.bz_fensterkontakt_state', 'on') %}
               mdi:window-open-variant
              {% else %}
                mdi:window-closed-variant
              {% endif %}
            icon_color: |-
              {% if is_state('binary_sensor.bz_fensterkontakt_state', 'on') %}
                blue
              {% else %}
                grey
              {% endif %}
          - type: template
            content: Wohnzimmer
            entity: binary_sensor.wz_fensterkontakt_state
            tap_action:
              action: more-info
            icon: |-
              {% if is_state('binary_sensor.wz_fensterkontakt_state', 'on') %}
               mdi:window-open-variant
              {% else %}
                mdi:window-closed-variant
              {% endif %}
            icon_color: |-
              {% if is_state('binary_sensor.wz_fensterkontakt_state', 'on') %}
                blue
              {% else %}
                grey
              {% endif %}
          - type: template
            content: Wohnungstür
            entity: binary_sensor.fl_kontakt_wohnungstur_state
            tap_action:
              action: more-info
            icon: >-
              {% if is_state('binary_sensor.fl_kontakt_wohnungstur_state', 'on')
              %}
               mdi:door-open
              {% else %}
                mdi:door-closed-lock
              {% endif %}
            icon_color: >-
              {% if is_state('binary_sensor.fl_kontakt_wohnungstur_state', 'on')
              %}
                blue
              {% else %}
                grey
              {% endif %}
          - type: template
            icon: mdi:lightbulb-group
            icon_color: |-
              {% if is_state('light.wohnung', 'on') %}
                orange
              {% else %}
                grey
              {% endif %}
            content: >-
              {% set count = namespace(value=0) %} {% for entity_id in
              state_attr('light.all_light_entities','entity_id') %}
                {% if (states(entity_id) == 'on') %}
                  {% set count.value = count.value + 1 %}
                {% endif %}
              {% endfor %} {{ count.value }} Lichter an
            tap_action:
              action: navigate
              navigation_path: /dashboard-tablet/steuerung
      - type: horizontal-stack
        view_layout:
          grid-area: left
        cards:
          - type: custom:button-card
            name: Family
            show_icon: false
            show_name: false
            tap_action:
              action: navigate
              navigation_path: /dashboard-tablet/calendar-family
            entity: sensor.calendar_family
            custom_fields:
              person: <img src="/local/community/profile_galaxy.jpg"/>
            template:
              - calendar
          - type: custom:button-card
            name: Mika
            show_icon: false
            show_name: false
            tap_action:
              action: navigate
              navigation_path: /dashboard-tablet/calendar-mika
            entity: sensor.calendar_mika
            custom_fields:
              person: <img src="/local/community/profile_mika3.jpg"/>
            template:
              - calendar
          - type: custom:button-card
            name: Eva
            show_icon: false
            show_name: false
            tap_action:
              action: navigate
              navigation_path: /dashboard-tablet/calendar-eva
            entity: sensor.calendar_eva
            custom_fields:
              person: <img src="/local/community/profile_eva.jpg"/>
            template:
              - calendar
      - type: custom:todoist-card
        view_layout:
          grid-area: todo
        entity: sensor.todoist_alexa_einkaufsliste
        show_header: false
        show_completed: 5
        show_item_add: true
        use_quick_add: false
        show_item_close: true
        show_item_delete: true
        only_today_overdue: false
        style: |
          .todoist-list .todoist-item {
            padding: 0px 0px 10px 0px;
            line-height: 16px!important;
          }
          .todoist-item .todoist-item-close {
            line-height: 16px!important;
            padding-right: 10px;
            color: grey;
          }
          .todoist-item .todoist-item-delete {
            line-height: 16px!important;
            color: grey;
          }
          .todoist-item .todoist-item-text {
            font-size: 16px!important;
            font-weight: 100!important;
            line-height: 16px!important;
            background: none;
          }
          .todoist-item-add {
            font-size: 16px!important;
            font-weight: 100!important;
            line-height: 16px!important;
            border: solid;
            border-color: grey;
            border-width: 1px;
            background: none;
          }          
          ha-card {
            --mdc-icon-button-size: 20px;
            --mdc-icon-size: 20px;
            border-radius: 10px;
          }
      - type: custom:stack-in-card
        view_layout:
          grid-area: right
        cards:
          - type: custom:mushroom-template-card
            entity: media_player.spotify_hell255
            primary: >
              {% if is_state('media_player.spotify_hell255','playing') %} {{
              state_attr('media_player.spotify_hell255','source').upper() }} {%
              else %}PARTY PAUSE{% endif %}
            card_mod:
              style: |
                ha-card {
                  --primary-text-color: grey;
                  margin-bottom: -12px;
                  --ha-card-border-width: 0;
                  --card-primary-font-weight: 400!important;
                }
          - type: horizontal-stack
            cards:
              - type: custom:mushroom-template-card
                entity: media_player.spotify_hell255
                layout: vertical
                icon: mdi:television
                icon_color: >
                  {% set source =
                  state_attr('media_player.spotify_hell255','source') %} {%- if
                  ("Mikael's 2nd Fire TV" not in
                  state_attr('media_player.spotify_hell255', 'source_list'))
                  -%}grey{% else %}
                   {% if source == "Mikael's 2nd Fire TV" %}#ff9e0b
                   {% elif source == "Überall" %}#a70bcd {% else %}white{% endif %}
                  {% endif %}
                tap_action:
                  action: call-service
                  service: automation.trigger
                  service_data:
                    entity_id: automation.spotify_play_fire_tv
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-width: 0px;
                      filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                    }
              - type: custom:mushroom-template-card
                entity: media_player.spotify_hell255
                layout: vertical
                icon: mdi:laptop
                icon_color: >
                  {% set source =
                  state_attr('media_player.spotify_hell255','source') %} {%- if
                  ("Mikas MacBook Air" not in
                  state_attr('media_player.spotify_hell255', 'source_list'))
                  -%}grey{% else %}
                   {% if source == "Mikas MacBook Air" %}#ff9e0b
                   {% elif source == "Überall" %}#a70bcd {% else %}white{% endif %}
                  {% endif %}
                tap_action:
                  action: call-service
                  service: automation.trigger
                  service_data:
                    entity_id: automation.spotify_play_macbook
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-width: 0px;
                      filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                    }
              - type: custom:mushroom-template-card
                entity: media_player.spotify_hell255
                layout: vertical
                icon: mdi:shower
                icon_color: >
                  {% set source =
                  state_attr('media_player.spotify_hell255','source') %} {%- if
                  ("Mikas Echo Klo" not in
                  state_attr('media_player.spotify_hell255', 'source_list'))
                  -%}grey{% else %}
                   {% if source == "Mikas Echo Klo" %}#ff9e0b
                   {% elif source == "Überall" %}#a70bcd {% else %}white{% endif %}
                  {% endif %}
                tap_action:
                  action: call-service
                  service: automation.trigger
                  service_data:
                    entity_id: automation.spotify_play_echo_klo
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-width: 0;
                      filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                    }
              - type: custom:mushroom-template-card
                entity: media_player.spotify_hell255
                layout: vertical
                icon: mdi:chef-hat
                icon_color: >
                  {% set source =
                  state_attr('media_player.spotify_hell255','source') %} {%- if
                  ("Mikas Echo Koch" not in
                  state_attr('media_player.spotify_hell255', 'source_list'))
                  -%}grey{% else %}
                   {% if source == "Mikas Echo Koch" %}#ff9e0b
                   {% elif source == "Überall" %}#a70bcd {% else %}white{% endif %}
                  {% endif %}                    
                tap_action:
                  action: call-service
                  service: automation.trigger
                  service_data:
                    entity_id: automation.spotify_play_echo_koch
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-width: 0;
                      filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                    }
              - type: custom:mushroom-template-card
                entity: media_player.spotify_hell255
                layout: vertical
                icon: mdi:sofa
                icon_color: >
                  {% set source =
                  state_attr('media_player.spotify_hell255','source') %} {%- if
                  ("Mikas Echo Eck" not in
                  state_attr('media_player.spotify_hell255', 'source_list'))
                  -%}grey{% else %}
                   {% if source == "Mikas Echo Eck" %}#ff9e0b
                   {% elif source == "Überall" %}#a70bcd {% else %}white{% endif %}
                  {% endif %}
                tap_action:
                  action: call-service
                  service: automation.trigger
                  service_data:
                    entity_id: automation.spotify_play_echo_eck
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-width: 0;
                      filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                    }
              - type: custom:mushroom-template-card
                entity: media_player.spotify_hell255
                layout: vertical
                icon: mdi:spotify
                icon_color: >
                  {% set source = state_attr('media_player.spotify_hell255',
                  'source') %} {% if source == "Überall" %}#ff9e0b {% else
                  %}white{% endif %}
                tap_action:
                  action: call-service
                  service: media_player.select_source
                  data:
                    entity_id: media_player.spotify_hell255
                    source: Überall
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-width: 0;
                      filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                    }
          - type: custom:mushroom-media-player-card
            entity: media_player.spotify_hell255
            icon: mdi:play
            use_media_info: true
            use_media_artwork: false
            show_volume_level: false
            media_controls:
              - play_pause_stop
              - previous
              - next
              - shuffle
            volume_controls:
              - volume_buttons
              - volume_set
            fill_container: false
            card_mod:
              style: |
                mushroom-shape-icon {
                    --card-mod-icon-color: var(--accent-color);
                  display: flex;
                  {% set media_type = state_attr(config.entity, 'media_content_type') %}
                  {% if media_type == 'music' %}
                    --card-mod-icon: mdi:music;
                    animation: beat 1.3s ease-out infinite both;
                  {% elif media_type == 'playlist' %}
                    --card-mod-icon: mdi:playlist-music;
                    animation: beat 1.3s ease-out infinite both;
                  {% else %}
                    --card-mod-icon: mdi:spotify;
                  {% endif %}

                  {{ 'animation: none;' if not is_state(config.entity, 'playing') }}

                }
                @keyframes beat {
                  0%, 60% { --icon-symbol-size: 21px; }
                  5%, 17%, 57% { --icon-symbol-size: 22px; }
                  10%, 20%, 51% { --icon-symbol-size: 23px; }
                  25%, 45% { --icon-symbol-size: 24px; }
                  30%, 39% { --icon-symbol-size: 25px; }
                  33% { --icon-symbol-size: 26px; }
                }
                ha-card {
                  --ha-card-border-width: 0;
                  --card-primary-font-weight: 200!important;
                  --card-secondary-font-weight: 400!important;
                }
                ha-card:before {
                  transform: translate3d(0,0,0);
                  -webkit-transform: translate3d(0,0,0);
                  content: "";

                  background: url('/local/community/music.jpg') center no-repeat;
                  {% if is_state(config.entity, ['playing', 'paused']) %}
                    background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                  {% endif %}

                  background-size: contain;
                  margin: -10px 4px 16px;
                  filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                  border-radius: var(--control-border-radius);
                  aspect-ratio: 1 / 1;
                }
          - type: conditional
            conditions:
              - entity: media_player.spotify_hell255
                state: playing
            card:
              entity: media_player.spotify_hell255
              hide:
                icon: true
                name: true
                runtime: true
                source: true
                power: true
                state_label: true
                volume: true
                info: true
                progress: false
                controls: true
              more_info: false
              type: custom:mini-media-player
              toggle_power: false
              group: true
              card_mod:
                style:
                  .: |
                    ha-card {
                      margin: 0px 12px 12px;
                      --mmp-progress-height: 24px !important;
                      height: var(--mmp-progress-height);
                      --mmp-border-radius: 10px !important;
                      --ha-card-border-width: 0;
                    }
          - type: conditional
            conditions:
              - entity: media_player.spotify_hell255
                state: idle
            card:
              type: custom:mini-media-player
              entity: media_player.spotify_hell255
              hide:
                icon: false
                name: false
                runtime: true
                source: true
                power: true
                state_label: true
                volume: true
                info: true
                progress: true
                controls: true
              more_info: false
              toggle_power: false
              group: true
              card_mod:
                style: |
                  ha-card {
                  margin-left: 20px;
                  margin-right: 20px;
        card_mod:
          style: |
            ha-card:before {
              transform: translate3d(0,0,0);
              -webkit-transform: translate3d(0,0,0);
              content: "";
              position: absolute;
              height: 100%;
              width: 100%;

              background: url('/local/community/bathroom_shower.png') center no-repeat;
              {% if is_state('media_player.spotify_hell255', ['playing', 'paused']) %}
                background: url( '{{ state_attr('media_player.spotify_hell255', "entity_picture") }}' ) center no-repeat;
              {% endif %}

              filter: blur(150px) saturate(200%) opacity(0.3);
              background-size: 100% 100%;
            }
            ha-card {
              transform: translate3d(0,0,0);
              -webkit-transform: translate3d(0,0,0);
            }
                
      - type: custom:auto-entities
        view_layout:
          grid-area: footer
        show_empty: false
        card:
          type: custom:mushroom-chips-card
          card_mod:
            style: |
              ha-card {
                --chip-icon-size: 16px;
                --chip-font-weight: 200!important;
                --chip-box-shadow: none;
                --chip-background: none;
                --chip-border-radius: 10px;
              }
        card_param: chips
        sort:
          method: state
          reverse: true
          numeric: true
        filter:
          include:
            - domain: sensor
              entity_id: '*power*'
              state: '>5'
              options:
                type: entity
          exclude:
            - entity_id: sensor.steckdose_kuhlschrank_power
            - entity_id: sensor.steckdose_server_power
      - type: custom:auto-entities
        show_empty: false
        card:
          type: custom:mushroom-chips-card
          card_mod:
            style: |
              ha-card {
                --color: var(--accent-color);
                --icon-color: var(--accent-color);
                --chip-box-shadow: none;
                --chip-border-radius: 10px;
              }
        card_param: chips
        sort:
          method: state
          reverse: true
          numeric: true
        filter:
          include:
            - domain: sensor
              entity_id: '*battery*'
              state: <20
              options:
                type: entity
  - theme: ios-dark-mode
    title: Heizungen
    path: heizungen
    icon: mdi:lamps
    type: custom:grid-layout
    layout:
      grid-template-columns: 1fr
      grid-template-rows: 79px
      grid-template-areas: |
        "set1"
      margin: 0px
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: custom:masonry-layout
        layout:
          width: 800
          max_cols: 5
          padding: 0px
          margin: 30px 30px 0px 30px
        view_layout:
          grid-area: set1
        cards:
          - type: vertical-stack
            cards:
              - type: markdown
                content: ' '
                title: WOHNZIMMER
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      margin-bottom: -5%;
                    }
              - type: horizontal-stack
                cards:
                  - type: custom:simple-thermostat
                    entity: climate.wz_heizungsgruppe
                    hide:
                      temperature: true
                      state: true
                    card_mod:
                      style: |
                        ha-card {
                          width: 100%;
                          margin-left: 0%;
                          border: none;
                          border-radius: 10px;
                          --st-font-size-xl: 20px;
                          --st-spacing: 0.8px
                        }
                    layout:
                      mode:
                        names: true
                        icons: false
                        headings: false
                    control:
                      hvac:
                        heat:
                          name: Manuell
                        auto:
                          name: Auto
                      preset:
                        away: false
                        none: false
                        boost: false
                        week_program_1: false
                        week_program_2: false
                        week_program_3: false
                    header: false
                  - type: custom:thermostat-dark-card
                    step: '0.5'
                    chevron_size: '50'
                    pending: '3'
                    idle_zone: '2'
                    entity: climate.wz_heizungsgruppe
                    card_mod:
                      style: |
                        ha-card {
                          width: 96.5%;
                          margin-left: 0%;
                          box-shadow: none;
                          border: none;
                        }              
                  - type: custom:button-card
                    name: NORMAL
                    aspect_ratio: 1/1
                    entity: climate.wz_heizungsgruppe
                    tap_action:
                      action: call-service
                      service: climate.set_preset_mode
                      service_data:
                        entity_id: climate.wz_heizungsgruppe
                        preset_mode: week_program_1
                      haptic: climate
                    hold_action:
                      action: more-info
                      haptic: climate
                    template:
                      - base
                      - base_standard_layout
                      - base_heat_normal_layout
                  - type: custom:button-card
                    name: BOOST
                    icon: mdi:fire
                    aspect_ratio: 1/1
                    entity: climate.wz_heizungsgruppe
                    tap_action:
                      action: call-service
                      service: climate.set_preset_mode
                      service_data:
                        entity_id: climate.wz_heizungsgruppe
                        preset_mode: boost
                      haptic: climate
                    hold_action:
                      action: more-info
                      haptic: climate
                    template:
                      - base
                      - base_standard_layout
                      - base_heat_boost_layout
                  - type: custom:button-card
                    name: URLAUB
                    icon: mdi:airplane
                    aspect_ratio: 1/1
                    entity: climate.wz_heizungsgruppe
                    tap_action:
                      action: call-service
                      service: climate.set_preset_mode
                      service_data:
                        entity_id: climate.wz_heizungsgruppe
                        preset_mode: week_program_2
                      haptic: climate
                    hold_action:
                      action: more-info
                      haptic: climate
                    template:
                      - base
                      - base_standard_layout
                      - base_heat_holiday_layout
              - type: markdown
                content: ' '
                title: KÜCHE
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      margin-bottom: -5%;
                    }
              - type: horizontal-stack
                cards:
                  - type: custom:simple-thermostat
                    entity: climate.k_heizungsgruppe
                    hide:
                      temperature: true
                      state: true
                    card_mod:
                      style: |
                        ha-card {
                          width: 100%;
                          margin-left: 0%;
                          border: none;
                          border-radius: 10px;
                          --st-font-size-xl: 20px;
                          --st-spacing: 0.8px
                        }
                    layout:
                      mode:
                        names: true
                        icons: false
                        headings: false
                    control:
                      hvac:
                        heat:
                          name: Manuell
                        auto:
                          name: Auto
                      preset:
                        away: false
                        none: false
                        boost: false
                        week_program_1: false
                        week_program_2: false
                        week_program_3: false
                    header: false
                  - type: custom:thermostat-dark-card
                    step: '0.5'
                    chevron_size: '50'
                    pending: '3'
                    idle_zone: '2'
                    entity: climate.k_heizungsgruppe
                    card_mod:
                      style: |
                        ha-card {
                          width: 96.5%;
                          margin-left: 0%;
                          box-shadow: none;
                          border: none;
                        }
                  - type: custom:button-card
                    name: NORMAL
                    aspect_ratio: 1/1
                    entity: climate.k_heizungsgruppe
                    tap_action:
                      action: call-service
                      service: climate.set_preset_mode
                      service_data:
                        entity_id: climate.k_heizungsgruppe
                        preset_mode: week_program_1
                      haptic: climate
                    hold_action:
                      action: more-info
                      haptic: climate
                    template:
                      - base
                      - base_standard_layout
                      - base_heat_normal_layout
                  - type: custom:button-card
                    name: BOOST
                    icon: mdi:fire
                    aspect_ratio: 1/1
                    entity: climate.k_heizungsgruppe
                    tap_action:
                      action: call-service
                      service: climate.set_preset_mode
                      service_data:
                        entity_id: climate.k_heizungsgruppe
                        preset_mode: boost
                      haptic: climate
                    hold_action:
                      action: more-info
                      haptic: climate
                    template:
                      - base
                      - base_standard_layout
                      - base_heat_boost_layout
                  - type: custom:button-card
                    name: URLAUB
                    icon: mdi:airplane
                    aspect_ratio: 1/1
                    entity: climate.k_heizungsgruppe
                    tap_action:
                      action: call-service
                      service: climate.set_preset_mode
                      service_data:
                        entity_id: climate.k_heizungsgruppe
                        preset_mode: week_program_2
                      haptic: climate
                    hold_action:
                      action: more-info
                      haptic: climate
                    template:
                      - base
                      - base_standard_layout
                      - base_heat_holiday_layout
              - type: markdown
                content: ' '
                title: BADEZIMMER
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      margin-bottom: -5%;
                    }
              - type: horizontal-stack
                cards:
                  - type: custom:simple-thermostat
                    entity: climate.bz_heizungsgruppe
                    hide:
                      temperature: true
                      state: true
                    card_mod:
                      style: |
                        ha-card {
                          width: 100%;
                          margin-left: 0%;
                          border: none;
                          border-radius: 10px;
                          --st-font-size-xl: 20px;
                          --st-spacing: 0.8px
                        }
                    layout:
                      mode:
                        names: true
                        icons: false
                        headings: false
                    control:
                      hvac:
                        heat:
                          name: Manuell
                        auto:
                          name: Auto
                      preset:
                        away: false
                        none: false
                        boost: false
                        week_program_1: false
                        week_program_2: false
                        week_program_3: false
                    header: false
                  - type: custom:thermostat-dark-card
                    step: '0.5'
                    chevron_size: '50'
                    pending: '3'
                    idle_zone: '2'
                    entity: climate.bz_heizungsgruppe
                    card_mod:
                      style: |
                        ha-card {
                          width: 96.5%;
                          margin-left: 0%;
                          box-shadow: none;
                          border: none;
                        }              
                  - type: custom:button-card
                    name: NORMAL
                    aspect_ratio: 1/1
                    entity: climate.bz_heizungsgruppe
                    tap_action:
                      action: call-service
                      service: climate.set_preset_mode
                      service_data:
                        entity_id: climate.bz_heizungsgruppe
                        preset_mode: week_program_1
                      haptic: climate
                    hold_action:
                      action: more-info
                      haptic: climate
                    template:
                      - base
                      - base_standard_layout
                      - base_heat_normal_layout
                  - type: custom:button-card
                    name: BOOST
                    icon: mdi:fire
                    aspect_ratio: 1/1
                    entity: climate.bz_heizungsgruppe
                    tap_action:
                      action: call-service
                      service: climate.set_preset_mode
                      service_data:
                        entity_id: climate.bz_heizungsgruppe
                        preset_mode: boost
                      haptic: climate
                    hold_action:
                      action: more-info
                      haptic: climate
                    template:
                      - base
                      - base_standard_layout
                      - base_heat_boost_layout
                  - type: custom:button-card
                    name: URLAUB
                    icon: mdi:airplane
                    aspect_ratio: 1/1
                    entity: climate.bz_heizungsgruppe
                    tap_action:
                      action: call-service
                      service: climate.set_preset_mode
                      service_data:
                        entity_id: climate.bz_heizungsgruppe
                        preset_mode: week_program_2
                      haptic: climate
                    hold_action:
                      action: more-info
                      haptic: climate
                    template:
                      - base
                      - base_standard_layout
                      - base_heat_holiday_layout
  - theme: ios-dark-mode
    title: Steuerung
    path: steuerung
    icon: mdi:cog
    type: custom:grid-layout
    layout:
      grid-template-columns: 1fr
      grid-template-rows: 79px
      grid-template-areas: |
        "set1"
      margin: 0px
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: custom:masonry-layout
        layout:
          width: 800
          max_cols: 5
          padding: 0px
          margin: 30px 30px 0px 30px
        view_layout:
          grid-area: set1
        cards:
          - type: vertical-stack
            cards:
              - type: markdown
                content: ' '
                title: WOHNZIMMER
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      margin-bottom: -5%;
                    }
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    name: Deckenlampe
                    aspect_ratio: 1/1
                    show_state: false
                    tap_action:
                      action: call-service
                      service: automation.trigger
                      service_data:
                        entity_id: automation.wohnzimmerdeckenlampe_toggle
                      haptic: light
                    hold_action:
                      action: more-info
                      haptic: light
                    entity: light.wohnzimmerdecke
                    template:
                      - base
                      - base_light_layout
                      - button_animation
                      - circle
                      - loader
                  - type: custom:button-card
                    name: Ecklampe
                    aspect_ratio: 1/1
                    show_state: false
                    tap_action:
                      action: toggle
                      haptic: light
                    hold_action:
                      action: more-info
                      haptic: light
                    entity: light.ecklampe
                    template:
                      - base
                      - base_light_layout
                      - button_animation
                      - circle
                      - loader
                  - type: custom:button-card
                    entity: fan.xiaomi_smart_air_purifier_4_pro
                    icon: mdi:fan
                    name: Luftreiniger
                    aspect_ratio: 1/1
                    show_state: false
                    tap_action:
                      action: call-service
                      service: automation.trigger
                      service_data:
                        entity_id: automation.luftreiniger_toggle
                      haptic: switch
                    hold_action:
                      action: more-info
                      haptic: switch
                    template:
                      - base
                      - base_standard_layout
                      - base_fan_layout
                      - button_animation
                      - loader
                  - type: custom:button-card
                    entity: switch.steckdose_spielekonsolen
                    icon: mdi:nintendo-game-boy
                    name: Konsolen
                    aspect_ratio: 1/1
                    show_state: false
                    tap_action:
                      action: toggle
                      haptic: switch
                    hold_action:
                      action: more-info
                      haptic: switch
                    template:
                      - base
                      - base_standard_layout
                      - base_switch_layout
                      - button_animation
                      - loader
                  - type: custom:button-card
                    template:
                      - base_spacing_layout
                  - type: custom:button-card
                    entity: media_player.samsung_the_frame_65
                    name: Fernseher
                    aspect_ratio: 1/1
                    show_state: true
                    tap_action:
                      action: call-service
                      service: media_player.toggle
                      service_data:
                        entity_id: media_player.samsung_the_frame_65
                      haptic: switch
                    hold_action:
                      action: more-info
                      haptic: switch
                    template:
                      - base
                      - base_standard_layout
                      - base_switch_layout
                      - button_animation
                      - loader
              - type: markdown
                content: ' '
                title: KÜCHE
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      margin-bottom: -5%;
                    }
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    name: Küchentisch
                    aspect_ratio: 1/1
                    show_state: false
                    tap_action:
                      action: call-service
                      service: automation.trigger
                      service_data:
                        entity_id: automation.kuchentisch_toggle
                      haptic: light
                    hold_action:
                      action: more-info
                      haptic: light
                    entity: light.kuchentisch
                    template:
                      - base
                      - base_light_layout
                      - button_animation
                      - circle
                      - loader
                  - type: custom:button-card
                    name: Deckenfluter
                    aspect_ratio: 1/1
                    show_state: false
                    tap_action:
                      action: call-service
                      service: automation.trigger
                      service_data:
                        entity_id: automation.kuchendecke_toggle
                      haptic: light
                    hold_action:
                      action: more-info
                      haptic: light
                    entity: light.kuche_deckenfluter
                    template:
                      - base
                      - base_light_layout
                      - button_animation
                      - circle
                      - loader
                  - type: custom:button-card
                    name: Metro
                    aspect_ratio: 1/1
                    show_state: false
                    tap_action:
                      action: toggle
                      haptic: light
                    hold_action:
                      action: more-info
                      haptic: light
                    entity: light.dimmable_light_1
                    template:
                      - base
                      - base_light_layout
                      - button_animation
                      - circle
                      - loader
                  - type: custom:button-card
                    entity: light.kueche_kuechenwand
                    name: Küchenwand
                    aspect_ratio: 1/1
                    show_state: false
                    tap_action:
                      action: toggle
                      haptic: switch
                    hold_action:
                      action: more-info
                      haptic: switch
                    template:
                      - base
                      - base_standard_layout
                      - base_switch_layout
                      - button_animation
                      - loader
                  - type: custom:button-card
                    template:
                      - base_spacing_layout
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    show_state: false
                    name: Küchendecke
                    entity: switch.schalter_kuche
                    tap_action:
                      action: toggle
                      haptic: switch
                    hold_action:
                      action: more-info
                      haptic: switch
                    template:
                      - base
                      - base_standard_layout
                      - base_switch_layout
                      - button_animation
                      - loader
              - type: markdown
                content: ' '
                title: BAD, FLUR
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      margin-bottom: -5%;
                    }
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    name: Flur
                    aspect_ratio: 1/1
                    show_state: false
                    tap_action:
                      action: toggle
                      haptic: light
                    hold_action:
                      action: more-info
                      haptic: light
                    entity: light.flur_deckenlampe
                    template:
                      - base
                      - base_light_layout
                      - button_animation
                      - circle
                      - loader
                  - type: custom:button-card
                    name: Badezimmer
                    aspect_ratio: 1/1
                    show_state: false
                    tap_action:
                      action: call-service
                      service: automation.trigger
                      service_data:
                        entity_id: automation.badezimmerdecke_toggle
                      haptic: light
                    hold_action:
                      action: more-info
                      haptic: light
                    entity: light.badezimmer_surimu
                    template:
                      - base
                      - base_light_layout
                      - button_animation
                      - circle
                      - loader
                  - type: custom:button-card
                    name: Robi
                    aspect_ratio: 1/1
                    show_state: false
                    entity: vacuum.robi
                    template:
                      - base
                      - base_standard_layout
                      - button_animation
                      - loader
                  - type: custom:button-card
                    template:
                      - base_spacing_layout
                  - type: custom:button-card
                    name: Guten Morgen
                    aspect_ratio: 1/1
                    show_state: false
                    icon: mdi:weather-sunny
                    entity: light.all_light_entities
                    template:
                      - base
                      - base_standard_layout
                      - button_animation
                    tap_action:
                      action: call-service
                      service: automation.trigger
                      service_data:
                        entity_id: automation.guten_morgen
                      haptic: switch
                  - type: custom:button-card
                    name: Gute Nacht
                    icon: mdi:weather-night
                    aspect_ratio: 1/1
                    show_state: false
                    entity: light.all_light_entities
                    tap_action:
                      action: call-service
                      service: automation.trigger
                      service_data:
                        entity_id: automation.gute_nacht
                      haptic: switch
                    template:
                      - base
                      - base_standard_layout
                      - button_animation
  - theme: ios-dark-mode
    title: Stromverbrauch
    path: strom
    icon: mdi:lightning-bolt
    type: custom:grid-layout
    layout:
      grid-template-columns: 1fr
      grid-template-rows: 79px
      grid-template-areas: |
        "set1"
      margin: 0px
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: custom:masonry-layout
        layout:
          width: 800
          max_cols: 5
          padding: 0px
          margin: 30px 30px 0px 30px
        view_layout:
          grid-area: set1
        cards:
          - type: vertical-stack
            cards:
              - type: markdown
                content: ' '
                title: WOHNZIMMER
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      margin-bottom: -5%;
                    }
              - type: horizontal-stack
                cards:
                  - type: custom:mini-graph-card
                    name: Decklampe
                    animate: true
                    decimals: 0
                    entities:
                      - entity: sensor.schalter_wohnzimmerdecke_power
                    tap_action:
                      action: call-service
                      service: switch.toggle
                      service_data:
                        entity_id: switch.schalter_wohnzimmerdecke
                    show:
                      icon: false
                      points: false
                    card_mod:
                      style: |
                        .header.flex .name.flex {
                          {% if states('sensor.schalter_wohnzimmerdecke_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        .states.flex {
                          {% if states('sensor.schalter_wohnzimmerdecke_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        ha-card {
                          border-radius: 10px;
                        }
                  - type: custom:button-card
                    template:
                      - base_empty_layout
                  - type: custom:mini-graph-card
                    name: Luftreiniger
                    animate: true
                    decimals: 0
                    entities:
                      - entity: sensor.steckdose_luftreiniger_power
                    tap_action:
                      action: call-service
                      service: switch.toggle
                      service_data:
                        entity_id: switch.steckdose_luftreiniger
                    show:
                      icon: false
                      points: false
                    card_mod:
                      style: |
                        .header.flex .name.flex {
                          {% if states('sensor.steckdose_luftreiniger_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        .states.flex {
                          {% if states('sensor.steckdose_luftreiniger_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        ha-card {
                          border-radius: 10px;
                        }
                  - type: custom:mini-graph-card
                    name: Fernseher
                    animate: true
                    decimals: 0
                    entities:
                      - entity: sensor.steckdose_fernseher_hifi_power
                    tap_action:
                      action: call-service
                      service: switch.toggle
                      service_data:
                        entity_id: switch.steckdose_fernseher_hifi
                    show:
                      icon: false
                      points: false
                    card_mod:
                      style: |
                        .header.flex .name.flex {
                          {% if states('sensor.steckdose_fernseher_hifi_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        .states.flex {
                          {% if states('sensor.steckdose_fernseher_hifi_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        ha-card {
                          border-radius: 10px;
                        }
                  - type: custom:button-card
                    template:
                      - base_spacing_layout
                  - type: custom:mini-graph-card
                    name: Konsolen
                    animate: true
                    decimals: 0
                    entities:
                      - entity: sensor.steckdose_spielekonsolen_power
                    tap_action:
                      action: call-service
                      service: switch.toggle
                      service_data:
                        entity_id: switch.steckdose_spielekonsolen
                    show:
                      icon: false
                      points: false
                    card_mod:
                      style: |
                        .header.flex .name.flex {
                          {% if states('sensor.steckdose_spielekonsolen_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        .states.flex {
                          {% if states('sensor.steckdose_spielekonsolen_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        ha-card {
                          border-radius: 10px;
                        }  
              - type: markdown
                content: ' '
                title: KÜCHE
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      margin-bottom: -5%;
                    }
              - type: horizontal-stack
                cards:
                  - type: custom:mini-graph-card
                    name: Küchentisch
                    animate: true
                    decimals: 0
                    entities:
                      - entity: sensor.schalter_kuchentisch_power
                    tap_action:
                      action: call-service
                      service: switch.toggle
                      service_data:
                        entity_id: switch.schalter_kuchentisch
                    show:
                      icon: false
                      points: false
                    card_mod:
                      style: |
                        .header.flex .name.flex {
                          {% if states('sensor.schalter_kuchentisch_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        .states.flex {
                          {% if states('sensor.schalter_kuchentisch_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        ha-card {
                          border-radius: 10px;
                        }                    
                  - type: custom:mini-graph-card
                    name: Decke Zeile
                    animate: true
                    decimals: 0
                    entities:
                      - entity: sensor.steckdose_kuchendecke_zeile_power
                    tap_action:
                      action: call-service
                      service: switch.toggle
                      service_data:
                        entity_id: switch.steckdose_kuchendecke_zeile
                    show:
                      icon: false
                      points: false
                    card_mod:
                      style: |
                        .header.flex .name.flex {
                          {% if states('sensor.steckdose_kuchendecke_zeile_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        .states.flex {
                          {% if states('sensor.steckdose_kuchendecke_zeile_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        ha-card {
                          border-radius: 10px;
                        }                    
                  - type: custom:mini-graph-card
                    name: Decke Herd
                    animate: true
                    decimals: 0
                    entities:
                      - entity: sensor.schalter_kuchendecke_herd_power
                    tap_action:
                      action: call-service
                      service: switch.toggle
                      service_data:
                        entity_id: switch.schalter_kuchendecke_herd
                    show:
                      icon: false
                      points: false
                    card_mod:
                      style: |
                        .header.flex .name.flex {
                          {% if states('sensor.schalter_kuchendecke_herd_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        .states.flex {
                          {% if states('sensor.schalter_kuchendecke_herd_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        ha-card {
                          border-radius: 10px;
                        }                    
                  - type: custom:mini-graph-card
                    name: Spülmaschine
                    animate: true
                    decimals: 0
                    entities:
                      - entity: sensor.steckdose_spulmaschine_power
                    tap_action:
                      action: call-service
                      service: switch.toggle
                      service_data:
                        entity_id: switch.steckdose_spulmaschine
                    show:
                      icon: false
                      points: false
                    card_mod:
                      style: |
                        .header.flex .name.flex {
                          {% if states('sensor.steckdose_spulmaschine_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        .states.flex {
                          {% if states('sensor.steckdose_spulmaschine_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        ha-card {
                          border-radius: 10px;
                        }                    
                  - type: custom:button-card
                    template:
                      - base_spacing_layout
                  - type: custom:mini-graph-card
                    name: Waschmaschine
                    animate: true
                    decimals: 0
                    entities:
                      - entity: sensor.steckdose_waschmaschine_power
                    tap_action:
                      action: call-service
                      service: switch.toggle
                      service_data:
                        entity_id: switch.steckdose_waschmaschine
                    show:
                      icon: false
                      points: false
                    card_mod:
                      style: |
                        .header.flex .name.flex {
                          {% if states('sensor.steckdose_waschmaschine_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        .states.flex {
                          {% if states('sensor.steckdose_waschmaschine_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        ha-card {
                          border-radius: 10px;
                        }                    
              - type: markdown
                content: ' '
                title: BAD, FLUR
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      margin-bottom: -5%;
                    }
              - type: horizontal-stack
                cards:
                  - type: custom:mini-graph-card
                    name: Badezimmerdecke
                    animate: true
                    decimals: 0
                    entities:
                      - entity: sensor.schalter_badezimmerdecke_power
                    tap_action:
                      action: call-service
                      service: switch.toggle
                      service_data:
                        entity_id: switch.schalter_badezimmerdecke
                    show:
                      icon: false
                      points: false
                    card_mod:
                      style: |
                        .header.flex .name.flex {
                          {% if states('sensor.schalter_badezimmerdecke_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        .states.flex {
                          {% if states('sensor.schalter_badezimmerdecke_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        ha-card {
                          border-radius: 10px;
                        }                    
                  - type: custom:button-card
                    template:
                      - base_empty_layout
                  - type: custom:button-card
                    template:
                      - base_empty_layout
                  - type: custom:mini-graph-card
                    name: Kühlschrank
                    animate: true
                    decimals: 0
                    entities:
                      - entity: sensor.steckdose_kuhlschrank_power
                    show:
                      icon: false
                      points: false
                    card_mod:
                      style: |
                        .header.flex .name.flex {
                          {% if states('sensor.steckdose_kuhlschrank_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        .states.flex {
                          {% if states('sensor.steckdose_kuhlschrank_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        ha-card {
                          border-radius: 10px;
                        }                    
                  - type: custom:button-card
                    template:
                      - base_spacing_layout
                  - type: custom:mini-graph-card
                    name: Server
                    animate: true
                    decimals: 0
                    entities:
                      - entity: sensor.steckdose_server_power
                    show:
                      icon: false
                      points: false
                    card_mod:
                      style: |
                        .header.flex .name.flex {
                          {% if states('sensor.steckdose_server_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        .states.flex {
                          {% if states('sensor.steckdose_server_power')|float > 5.0 %}color: var(--accent-color);{% endif %}
                        }
                        ha-card {
                          border-radius: 10px;
                        }                    
  - theme: ios-dark-mode
    title: Energie
    path: energie
    icon: mdi:power
    type: sidebar
    badges: []
    cards:
      - type: entities
        entities:
          - entity: sensor.stromkasten_verbrauch_gesamt
          - entity: sensor.wohnung_verbrauch_summe
        show_header_toggle: false
        state_color: false
      - type: energy-date-selection
      - type: energy-distribution
        card_mod: null
        style: |
          ha-card {
            border-radius: 10px;
            background: none;
          }
      - type: energy-usage-graph
        style: |
          ha-card {
            border-radius: 10px;
          }
      - type: energy-devices-graph
        style: |
          ha-card {
            border-radius: 10px;
          }
      - type: energy-sources-table
        style: |
          ha-card {
            border-radius: 10px;
          }
  - theme: ios-dark-mode
    title: Lichter
    path: lichter
    icon: mdi:lamps-outline
    type: sidebar
    badges: []
    cards:
      - type: custom:mushroom-title-card
        title: WOHNZIMMER
      - type: custom:auto-entities
        card:
          type: grid
          columns: 4
          square: false
        card_param: cards
        sort:
          method: name
        filter:
          exclude:
            - entity_id: light.wohnzimmer
            - entity_id: light.hue_wohnzimmerdecke
          include:
            - domain: light
              area: Wohnzimmer
              options:
                type: custom:config-template-card
                entities:
                  - this.entity_id
                card:
                  type: custom:mushroom-light-card
                  entity: this.entity_id
                  name: >-
                    ${
                    states['this.entity_id'].attributes.friendly_name.replace('Wohnzimmer
                    Hue', '') }
                  fill_container: true
                  show_brightness_control: true
                  use_light_color: true
                  secondary_info: none
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 10px;
                      }
      - type: custom:mushroom-title-card
        title: KÜCHE
      - type: custom:auto-entities
        card:
          type: grid
          columns: 4
          square: false
        card_param: cards
        filter:
          exclude:
            - entity_id: light.kuche
            - entity_id: light.hue_kuchentisch
          include:
            - domain: light
              area: Küche
              options:
                type: custom:config-template-card
                entities:
                  - this.entity_id
                card:
                  type: custom:mushroom-light-card
                  entity: this.entity_id
                  name: >-
                    ${
                    states['this.entity_id'].attributes.friendly_name.replace('Küche
                    Hue', '').replace('Küche ', '') }
                  fill_container: true
                  show_brightness_control: true
                  use_light_color: true
                  secondary_info: none
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 10px;
                      }
      - type: custom:mushroom-title-card
        title: BAD, FLUR
      - type: custom:auto-entities
        card:
          type: grid
          columns: 4
          square: false
        card_param: cards
        filter:
          exclude:
            - entity_id: light.flur
            - entity_id: light.badezimmer
          include:
            - domain: light
              area: Badezimmer
              options:
                type: custom:config-template-card
                entities:
                  - this.entity_id
                card:
                  type: custom:mushroom-light-card
                  entity: this.entity_id
                  name: >-
                    ${
                    states['this.entity_id'].attributes.friendly_name.replace('Hue',
                    '') }
                  fill_container: true
                  show_brightness_control: true
                  use_light_color: true
                  secondary_info: none
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 10px;
                      }
            - domain: light
              area: Flur
              options:
                type: custom:config-template-card
                entities:
                  - this.entity_id
                card:
                  type: custom:mushroom-light-card
                  entity: this.entity_id
                  name: >-
                    ${
                    states['this.entity_id'].attributes.friendly_name.replace('Hue',
                    '') }
                  fill_container: true
                  show_brightness_control: true
                  use_light_color: true
                  secondary_info: none
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 10px;
                      }
  - theme: ios-dark-mode
    title: Schalter
    path: schalter
    icon: mdi:power-plug-outline
    type: sidebar
    badges: []
    cards:
      - type: custom:mushroom-title-card
        title: WOHNZIMMER
      - type: custom:auto-entities
        card:
          type: grid
          columns: 4
          square: false
        card_param: cards
        filter:
          exclude:
            - state: unavailable
          include:
            - domain: switch
              area: Wohnzimmer
              options:
                type: custom:config-template-card
                entities:
                  - this.entity_id
                card:
                  type: custom:mushroom-entity-card
                  tap_action:
                    action: toggle
                  entity: this.entity_id
                  name: >-
                    ${
                    states['this.entity_id'].attributes.friendly_name.replace(/Steckdose|Schalter/g,
                    '') }
                  fill_container: true
                  secondary_info: none
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 10px;
                      }              
      - type: custom:mushroom-title-card
        title: KÜCHE
      - type: custom:auto-entities
        card:
          type: grid
          columns: 4
          square: false
        card_param: cards
        filter:
          exclude:
            - state: unavailable
          include:
            - domain: switch
              area: Küche
              options:
                type: custom:config-template-card
                entities:
                  - this.entity_id
                card:
                  type: custom:mushroom-entity-card
                  tap_action:
                    action: toggle
                  entity: this.entity_id
                  name: >-
                    ${
                    states['this.entity_id'].attributes.friendly_name.replace(/Steckdose|Schalter/g,
                    '') }
                  fill_container: true
                  secondary_info: none
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 10px;
                      }    
      - type: custom:mushroom-title-card
        title: BAD, FLUR
      - type: custom:auto-entities
        card:
          type: grid
          columns: 4
          square: false
        card_param: cards
        filter:
          exclude:
            - state: unavailable
          include:
            - domain: switch
              area: Badezimmer
              options:
                type: custom:config-template-card
                entities:
                  - this.entity_id
                card:
                  type: custom:mushroom-entity-card
                  tap_action:
                    action: toggle
                  entity: this.entity_id
                  name: >-
                    ${
                    states['this.entity_id'].attributes.friendly_name.replace(/Steckdose|Schalter/g,
                    '') }
                  fill_container: true
                  secondary_info: none
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 10px;
                      }             
            - domain: switch
              area: Flur
              options:
                type: custom:config-template-card
                entities:
                  - this.entity_id
                card:
                  type: custom:mushroom-entity-card
                  tap_action:
                    action: toggle
                  entity: this.entity_id
                  name: >-
                    ${
                    states['this.entity_id'].attributes.friendly_name.replace(/Steckdose|Schalter/g,
                    '') }
                  fill_container: true
                  secondary_info: none
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 10px;
                      }             
  - title: Calendar Mika
    path: calendar-mika
    type: panel
    badges: []
    cards:
      - initial_view: dayGridMonth
        type: calendar
        entities:
          - calendar.mika
        title: Mika
  - title: Calendar Eva
    path: calendar-eva
    type: panel
    badges: []
    cards:
      - initial_view: dayGridMonth
        type: calendar
        entities:
          - calendar.eva
        title: Evamaria
  - title: Calendar Family
    path: calendar-family
    type: panel
    badges: []
    cards:
      - initial_view: dayGridMonth
        type: calendar
        entities:
          - calendar.family
        title: Familie
  - theme: ios-dark-mode
    title: Wetter
    path: wetter
    icon: mdi:weather-partly-cloudy
    type: sidebar
    badges: []
    cards:
      - type: custom:hourly-weather
        entity: weather.forecast_home_hourly
        icons: true
        show_precipitation_amounts: true
        show_precipitation_probability: true
        show_wind: 'true'
        label_spacing: '2'
        offset: '0'
        name: ' '
        card_mod:
          style: |
            ha-card {
              border-radius: 10px;
            }
      - type: horizontal-stack
        cards:
          - type: weather-forecast
            entity: weather.forecast_home
            name: Home
            show_forecast: true
            card_mod:
              style: |
                ha-card {
                  border-radius: 10px;
                }
          - type: custom:sun-card
            language: de
            card_mod:
              style: |
                ha-card {
                  border-radius: 10px;
                }          
      - type: custom:weather-radar-card
        map_style: Dark
        zoom_level: 7
        frame_delay: 1000
        static_map: false
        show_marker: false
        show_scale: false
        show_zoom: false
        show_playback: false
        show_range: false
        square_map: false
        show_recenter: false
        extra_labels: false
        data_source: RainViewer-DarkSky
        frame_count: 10
        card_mod:
          style: |
            ha-card {
              border-radius: 10px;
            }        
  - theme: ios-dark-mode
    title: Pflanzen
    path: pflanzen
    icon: mdi:flower
    type: sidebar
    badges: []
    cards:
      - type: horizontal-stack
        cards:
          - type: custom:flower-card
            entity: plant.papa_bonsai
            show_bars:
              - illuminance
              - humidity
              - moisture
              - conductivity
              - temperature
              - dli
            card_mod:
              style: |
                ha-card {
                  border-radius: 10px;
                }     
          - type: custom:flower-card
            entity: plant.junior_bonsai
            show_bars:
              - illuminance
              - humidity
              - moisture
              - conductivity
              - temperature
              - dli
            card_mod:
              style: |
                ha-card {
                  border-radius: 10px;
                }     
      - type: horizontal-stack
        cards:
          - type: custom:flower-card
            entity: plant.badezimmerpflanze_junior
            show_bars:
              - illuminance
              - humidity
              - moisture
              - conductivity
              - temperature
              - dli
            card_mod:
              style: |
                ha-card {
                  border-radius: 10px;
                }     
          - type: custom:flower-card
            entity: plant.badezimmerpflanze_papa
            show_bars:
              - illuminance
              - humidity
              - moisture
              - conductivity
              - temperature
              - dli
            card_mod:
              style: |
                ha-card {
                  border-radius: 10px;
                }     
      - type: custom:flower-card
        entity: plant.palme
        show_bars:
          - illuminance
          - humidity
          - moisture
          - conductivity
          - temperature
          - dli
        card_mod:
          style: |
            ha-card {
              border-radius: 10px;
            }     
button_card_templates:
  base:
    variables:
      colorz: |
        [[[ 
          let is_rgb = entity?.attributes?.rgb_color;
          return is_rgb
          ? `rgb(${entity.attributes.rgb_color})`
          : 'var(--primary-color)';
        ]]]    
      circle_input: |
        [[[ return Math.round(entity.attributes.brightness / 2.55); ]]]
      circle_inputs: |
        [[[ 
          let is_brightness = entity?.attributes?.brightness;
          let is_fan_percentage = entity?.attributes?.percentage;
          if (is_brightness)  return Math.round(entity.attributes.brightness / 2.55);
          else if (is_fan_percentage) return Math.round(entity.attributes.percentage / 1.00);
          else return 0;
        ]]]
      normal_on: |
        [[[ return (entity.attributes.preset_mode === 'week_program_1'); ]]]
      boost_on: |
        [[[ return (entity.attributes.preset_mode === 'boost'); ]]]
      holiday_on: |
        [[[ return (entity.attributes.preset_mode === 'week_program_2'); ]]]
      state_on: >
        [[[ return ['on', 'home', 'cool', 'fan_only', 'playing',
        'unlocked'].indexOf(!entity || entity.state) !== -1; ]]]
      state: |
        [[[ return !entity || entity.state; ]]]
      timeout: >
        [[[ return !entity || Date.now() - Date.parse(entity.last_changed);
        ]]]      
    styles:
      card:
        - padding: 5%
        - border-radius: 10px
      name:
        - text-align: left
        - justify-self: start
        - padding: 0px 10px
        - font-weight: normal
        - line-height: 15px
        - bottom: 10%
        - position: absolute
      state:
        - text-align: right
        - justify-self: end
        - padding: 0px 10px
        - font-weight: normal
        - line-height: 15px
        - bottom: 10%
        - position: absolute
  base_standard_layout:
    styles:
      icon:
        - color: var(--primary-color)
        - top: 3%
        - left: 10%
        - height: 50%
        - width: 50%
      grid:
        - grid-template-areas: '"i ." "n n"'
        - grid-template-columns: 1fr 1fr
        - grid-template-rows: 3fr 1fr
  base_switch_layout:
    state:
      - value: 'on'
        styles:
          icon:
            - animation: jiggle 0.3s ease 4
    styles:
      icon:
        - color: |
            [[[ 
              return variables.state_on
                ? `${variables.colorz}`
                : `var(--primary-text-color)`;
            ]]] 
  base_heat_normal_layout:
    styles:
      icon:
        - color: |
            [[[ 
              if ( variables.boost_on ) return `var(--disabled-text-color)`;
              return variables.normal_on
                ? `${variables.colorz}`
                : `var(--primary-text-color)`;
            ]]] 
  base_heat_boost_layout:
    styles:
      card:
        - animation: |
            [[[ 
              return variables.boost_on
              ? `myfading 3s ease infinite`
              : ` `;
            ]]] 
      icon:
        - color: |
            [[[ 
              return variables.boost_on
                ? `${variables.colorz}`
                : `var(--primary-text-color)`;
            ]]] 
    extra_styles: |
      @keyframes myfading {
        0% {background: var(--primary-color)}
        50% {background: var(--card-background-color)}
        100% {background: var(--primary-color)}
        }
  base_heat_holiday_layout:
    styles:
      icon:
        - color: |
            [[[ 
              if ( variables.boost_on ) return `var(--disabled-text-color)`;
              return variables.holiday_on
                ? `${variables.colorz}`
                : `var(--primary-text-color)`;
            ]]] 
  base_light_layout:
    styles:
      icon:
        - color: |
            [[[ 
              return variables.state_on
                ? `${variables.colorz}`
                : `var(--primary-text-color)`;
            ]]] 
        - top: 3%
        - left: 10%
        - height: 50%
        - width: 50%
      grid:
        - grid-template-areas: '"i circle" "n n"'
        - grid-template-columns: 1fr 1fr
        - grid-template-rows: 3fr 1fr
      custom_fields:
        circle:
          - display: initial
          - width: 60%
          - letter-spacing: 0.03vw
          - margin: '-75% 5% 0 0'
          - justify-self: end
          - opacity: 1
  base_fan_layout:
    state:
      - value: 'on'
        styles:
          icon:
            - animation: rotating 4s linear infinite
    styles:
      icon:
        - color: |
            [[[ 
              return variables.state_on
                ? `var(--primary-color)`
                : `var(--primary-text-color)`;
            ]]]       
        - top: 3%
        - left: 10%
        - height: 50%
        - width: 50%
      grid:
        - grid-template-areas: '"i circle" "n n"'
        - grid-template-columns: 1fr 1fr
        - grid-template-rows: 3fr 1fr
      custom_fields:
        circle:
          - display: initial
          - width: 60%
          - letter-spacing: 0.03vw
          - margin: '-75% 5% 0 0'
          - justify-self: end
          - opacity: 1
  base_spacing_layout:
    show_icon: false
    show_name: false
    styles:
      card:
        - width: 0.5em
        - background: none
        - border: none
  base_empty_layout:
    show_icon: false
    show_name: false
    styles:
      card:
        - background: none
        - border: false
        - border-width: 0px
  base_power_layout:
    styles:
      icon:
        - top: 3%
        - left: 10%
        - height: 50%
        - width: 50%
        - color: |
            [[[ 
              if (entity.state > 5.0) return `var(--primary-color)`;
              return `var(--primary-text-color)`;
            ]]]        
      grid:
        - grid-template-areas: '"i power" "n n"'
        - grid-template-columns: 1fr 1fr
        - grid-template-rows: 3fr 1fr
      custom_fields:
        power:
          - font-size: 22px
          - display: initial
          - width: 100%
          - letter-spacing: 0.03vw
          - margin: '-75% 5% 0 0'
          - justify-self: end
          - opacity: 1
  base_powers_layout:
    styles:
      card:
        - border: solid
        - border-width: 1px
        - border-color: var(--card-background-color)
      icon:
        - color: |
            [[[ 
              return variables.state_on
                ? `${variables.colorz}`
                : `var(--primary-text-color)`;
            ]]]        
        - top: 3%
        - left: 10%
        - height: 50%
        - width: 50%
      grid:
        - grid-template-areas: '"i powers" "n n"'
        - grid-template-columns: 1fr 1fr
        - grid-template-rows: 3fr 1fr
      custom_fields:
        powers:
          - display: initial
          - width: 100%
          - letter-spacing: 0.03vw
          - margin: '-75% 5% 0 0'
          - justify-self: end
          - opacity: 1
  base_footer:
    styles:
      icon:
        - height: 100%
      grid:
        - grid-template-areas: '"i n"'
        - grid-template-columns: 1fr 2fr
      name:
        - justify-self: start
  base_person:
    styles:
      card:
        - padding: 5%
        - font-size: 13px
        - border-radius: 10px
      name:
        - left: 0
        - bottom: 0
        - pointer-events: none
        - line-height: 1.1em
        - background-color: rgba(0, 0, 0, 0.4)
        - width: 100%
        - transform: initial
        - text-align: left
        - justify-self: start
        - padding: 5px 10px
        - font-weight: bold
        - position: absolute
      state:
        - left: 0
        - bottom: 0
        - pointer-events: none
        - line-height: 1.1em
        - background-color: rgba(0, 0, 0, 0.4)
        - width: 100%
        - transform: initial
        - text-align: left
        - justify-self: start
        - padding: 2px 10px
        - font-weight: bold
        - position: absolute
      grid:
        - grid-template-areas: '". battery" "n n" "s proximity"'
        - grid-template-columns: 1fr 1fr
        - grid-template-rows: 1fr 1fr 1fr
      custom_fields:
        battery:
          - right: 0
          - top: 0
          - letter-spacing: 0.03vw
          - justify-self: end
          - font-size: 0.95em
          - background-color: rgba(0, 0, 0, 0)
          - width: 100%
          - position: absolute
          - text-align: right
          - text-shadow: 1px 1px 3px rgb(75,75,75)
        proximity:
          - right: 0
          - bottom: 0
          - pointer-events: none
          - line-height: 1.1em
          - transform: initial
          - text-align: right
          - justify-self: start
          - padding: 2px 10px
          - font-weight: bold
          - position: absolute
  fan_animation:
    styles:
      icon:
        - animation: |
            [[[ 
              if (entity.state > 5.0) return `rotating 4s linear infinite`;
              return ` `;
            ]]]
  button_animation:
    tap_action:
      animation_card: |
        [[[
          let time = 900;
          this.shadowRoot.getElementById('card').style.animation =
            `card_bounce ${time}ms cubic-bezier(0.22, 1, 0.36, 1)`,
            window.setTimeout(() => {
              this.shadowRoot.getElementById('card').style.animation = 'none'
            }, time);
        ]]]
    extra_styles: |
      @keyframes card_bounce {
        0% {
          transform: scale(1);
         }
        15% {
          transform: scale(0.9);
        }
        25% {
          transform: scale(1);
        }
        30% {
           transform: scale(0.98);
        }
         100% {
          transform: scale(1);
        }
      }
      @keyframes jiggle {
        0% {
            transform: rotate(-8deg);
        }
        25% {
            transform: rotate(0deg);
        }
        50% {
            transform: rotate(8deg);
        }
        75% {
            transform: rotate(0deg);
        }
        100% {
            transform: rotate(-8deg);
        }
      }
  circle:
    custom_fields:
      circle: |
        [[[
          if (variables.state_on) {
            let input = variables.circle_inputs;
            return `
              <svg viewBox="0 0 36 36" class="circular-chart">
              <path class="circle-bg"
                d="M18 2.0845
                a 15.9155 15.9155 0 0 1 0 31.831
                a 15.9155 15.9155 0 0 1 0 -31.831"
              />
              <path class="circle" 
                d="M18 2.0845 
                a 15.9155 15.9155 0 0 1 0 31.831
                a 15.9155 15.9155 0 0 1 0 -31.831" 
              fill="none" 
              stroke="#444";
              stroke-width="1";
              stroke-dasharray = "${input}, 100"
              />
              <text x="50%" y="50%" fill="#fff" font-size="8" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
              <style>
              .circular-chart {
                display: block;
                margin: 10px auto;
                max-width: 100%;
                max-height: 200px;
              }
              .circle-bg {
                fill: none;
                stroke: rgba(255, 255, 255, 0.05);
                stroke-width: 3.8;
              }
              .circle {
                stroke: ${variables.colorz};
                fill: none;
                stroke-width: 2.8;
                stroke-linecap: round;
                animation: progress 1s ease-out forwards;
              }
              @keyframes progress {
                0% {
                  stroke-dasharray: 0 100;
                }
              }
              </svg>
            `;
          }
        ]]]
  power:
    custom_fields:
      power: |
        [[[ 
          var b = entity.state;
          var c = Math.trunc(Math.round(b))
          return `<text font-size="100">${c}W</text>`
        ]]]
  fan:
    custom_fields:
      fan: |
        [[[ 
          var f = entity.state;
          return `<text font-size="100">${f}</text>`
        ]]]        
  powers:
    custom_fields:
      powers: |
        [[[ 
          var s = entity.state;
          set dev = device_id(s);
          return `<text font-size="100">${dev}</text>`
        ]]]
  battery:
    custom_fields:
      battery: |
        [[[ 
          var i = states[variables.battery_person].attributes.icon;
          var b = states[variables.battery_person].state;
          return `<ha-icon icon='${i}' style='width: 16px; vertical-align:2px'></ha-icon><text font-size="100">${b}%</text>`
        ]]]
  proximity:
    custom_fields:
      proximity: |
        [[[
          return `
            ${states[variables.proximity_person].state} km`
        ]]]
  icon_hue:
    styles:
      custom_fields:
        icon:
          - width: 77%
          - margin-left: '-14%'
          - margin-top: 1%
    custom_fields:
      icon: |
        [[[
          let state = variables.state_on && variables.timeout < 2000 ? 'on' : null;
          return `
            <svg viewBox="0 0 50 50">
              <style>
                @keyframes on {
                  0% {
                    transform: scale(0.85);
                  }
                  20% {
                    transform: scale(1.1);
                  }
                  40% {
                    transform: scale(0.95);
                  }
                  60% {
                    transform: scale(1.03);
                  }
                  80% {
                    transform: scale(0.97);
                  }
                  100% {
                    transform: scale(1);
                  }
                }
                .on {
                  animation: on 0.8s;
                  transform-origin: center;
                }
              </style>
              <path fill="#9da0a2" d="M27.4 47.3h-4.9s-.7.1-.7.8.4.9.7.9h4.9c.3 0 .7-.1.7-.9s-.7-.8-.7-.8zm3.3-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-3H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9s-.9-.8-.9-.8zm5.2-23.2c-3.3-5.3-7-5.6-10.9-5.6-3.8 0-8.4.4-10.9 5.6-.1.1-.1.3.1.7.4.8 3.3 7.2 3.2 18.8 0 1.1-.1 1.6 0 1.7 0 .1 0 .7 1.1.7h13c1 0 1-.5 1.1-.7v-1.7c-.1-11.6 2.8-18 3.2-18.8.1-.4.1-.5.1-.7"/>
              <path class="${state}" fill="var(--light-color)" d="M14.1 15.3c3.4-.3 7-.4 10.9-.4 3.8 0 7.5.2 10.9.4.4-.4.7-.8.9-1.1C39 8.5 38.9 6.5 38.9 6c-.2-4.4-8.4-5-12.1-5h0-3.4c-3.7 0-12 .5-12.1 5 0 .5-.1 2.5 2.1 8.2 0 .3.3.8.7 1.1z"/>
            </svg>
          `;
        ]]]
  loader:
    custom_fields:
      loader: |
        <img src="/local/community/loader.svg" width="100%">
    tap_action:
      loader: |
        [[[
          if (entity) {
              let elt = this.shadowRoot,
                  loader = (id, style, timeout) => {
                    elt.getElementById(id) && (elt.getElementById(id).style.display = style,
                      window.setTimeout(() => {
                        elt.getElementById('loader').style.display = 'none'
                      }, 30000))
                  };
              loader('circle', 'none', 'initial'),
              loader('loader', 'initial', 'none');
          }
        ]]]
    styles:
      custom_fields:
        loader:
          - display: none
          - top: 1%
          - right: 2%
          - width: 40%
          - position: absolute
          - opacity: 0.8
          - pointer-events: none
          - filter: invert(1)
  calendar:
    custom_fields:
      calendar: |
        [[[ let calSnippet = ''; let j = 0
        for (let i = 0; i < entity.state; i++) {
          if (i > 2+j) {};
          if (i <= 2+j) {
          let year = entity.attributes.data[i].year;
          if (year < 2023) {j++; continue;}
          let start_month = entity.attributes.data[i].startMonth;
          let start_day = entity.attributes.data[i].startDay;
          let start_time = entity.attributes.data[i].startTime;
          let end_month = entity.attributes.data[i].endMonth;
          let end_day = entity.attributes.data[i].endDay;
          let end_time = entity.attributes.data[i].endTime;
          let time = start_time;
          let wholeDay = entity.attributes.data[i].wholeDay;
          if (end_day != null && start_day !== end_day) {time = start_day + " bis " + end_day + " " + end_month};
          if (wholeDay === true) {time = "Ganztägig"};
          let event = entity.attributes.data[i].summary;
          let location = entity.attributes.data[i].location;
          if (location === "" || location === undefined) {location = "-"}

          // Test-Data
          //event = "Lorem Ipsum is now here";
          //event = "LoremIpsumIsNow Here";
          //event = "Lorem Ipsum IsNowHereEverywhere";
          //location = "Flugnummer LH2418 von Hier";

          //
          // makeTextFit
          //
          // this function makes the text fit into the table
          // maxLineLength: indicates the maximum length of a single line
          // maxTotalLines: indicates how many lines we want
          function makeTextFit(text, maxLineLength, maxTotalLines) {
            let words = text.split(' ');

            // first, we search for long words and split them
            const words2 = [];
             for (var x = 0; x < words.length; x++) {
              let str = words[x];
              if ( str.length > maxLineLength) {
                words2.push(str.slice(0, maxLineLength - 1) + "-");
                words2.push(str.slice(maxLineLength - 1, str.length));
              }
              else
                words2.push( str );
            }

            // second, we go through all words and create lines
            // if event field over max text field, we finish with "..."
            let newText = "";
            let currentLineLength = 0;
            let currentLines = 1;
            
            for (var x = 0; x < words2.length; x++) {
              let str = words2[x];

              // if current line length + new word is bigger than max, create new line
              if ( currentLineLength + str.length > maxLineLength )
              {
                // if we reached the maximum line, add "..." to finish
                if ( currentLines + 1 > maxTotalLines)
                {
                  newText = newText.slice(0, newText.length - 3) + "...";
                  break;
                }
                // else create a new line and add text
                else 
                {
                  newText += "<br>" + str + " ";
                  currentLineLength = str.length;
                  currentLines += 1;
                }
              }
              // we have space to add word
              else
              {
                newText += str + " ";
                currentLineLength += str.length + 1;
              }
            }

            // return result without whitespaces
            return newText.trim();
          }

          // creates text field which fits into table
          event = makeTextFit( event, 14, 2)

          // location has smaller font, more space
          location = makeTextFit( location, 16, 2)



        calSnippet += 
          `<table><tr>
              <td class="date month">${start_month}</td><td class="event"><div class="event-title">${event}</div></td>
            </tr>
            <tr>
              <td class="date day">${start_day}</td><td class="event"><span class="location"><ha-icon class="icon" icon="mdi:map-marker"></ha-icon>${location}</span><span class="time"><ha-icon class="icon" icon="mdi:clock-outline"></ha-icon>${time}</span></td>
            </tr></table>`
            }
        }
        return calSnippet; ]]]
    styles:
      card:
        - border-radius: 10px
      grid:
        - grid-template-areas: '"person" "calendar"'
        - grid-template-columns: 1fr
        - grid-template-rows: 1fr min-content
      person:
        - align-self: middle
    style: |
      img {
        border-radius: 50%;
        width: 64px;
        margin-bottom: 1em;
        margin-top: 0.2em;
      }
      .icon {
        margin-right: 5px;
        text-align: center;
        float: left;
        width: 12px;
      }
      table {
        margin-left: 4px;
        margin-right: 4px;
        padding-right: 0px;
        box-sizing: border-box;
        border-spacing: 0;
        margin-bottom: 1.0em;
        width: 100%;
        color: blue;
        line-break: strict;
      }
      td {
        white-space: -o-pre-wrap; 
        word-wrap: break-word;
        white-space: pre-wrap; 
        white-space: -moz-pre-wrap; 
        white-space: -pre-wrap; 
        color: white;
      }
      .date {
        border-right: 1px solid var(--primary-color);
        width: 20%;
        text-align: center;
        color: var(--primary-text-color);
      }
      .event, .task {
        padding-left: 8px;
        width: 80%;
        font-family: Roboto,Noto,sans-serif;
        color: var(--primary-text-color);
        font-weight: 200;
      }
      .month {
        padding-right: 4px;
        text-transform: uppercase;
        vertical-align: bottom;
        font-family: Roboto,Noto,sans-serif;
        font-weight: 300;
        font-size: 16px;
        color: var(--primary-text-color);
      }
      .day {
        vertical-align: top;
        font-family: Roboto,Noto,sans-serif;
        font-weight: 300;
        font-size: 24px;
        text-align: center;
        color: var(--primary-text-color);
      }
      .event-title {
        margin-top: 0;
        margin-right: 6px;
        font-family: Roboto,Noto,sans-serif;
        font-size: 0.8em;
        font-weight: 300;
        text-align: left;
        vertical-align: top;
        word-wrap: break-word;
        overflow-wrap: break-word;
        color: var(--primary-text-color);
      }
      .time, .location {
        padding-right: 10px;
        display: block;
        text-align: left;
        font-size: 0.6em;
        padding-top: 5px;
      }
      .time {
        padding-bottom: 1em;
      }
  base2_new:
    styles:
      grid:
        - grid-template-areas: |
            "icon  circle"
            "n     n"
            "s     s"
        - grid-template-columns: repeat(2, 1fr)
        - grid-template-rows: auto repeat(2, min-content)
        - align-items: start
        - top: 3%
        - left: 10%
        - height: 90%
        - width: 90%
  icon_fan2:
    styles:
      custom_fields:
        icon:
          - width: 75%
          - margin-left: '-3%'
    custom_fields:
      icon: |
        [[[
          let path = `
            <circle cx="25" cy="25" r="6.6"/>
            <path d="M31.9 30.4c-.5.6-1.1 1.1-1.7 1.5-1.4 1.1-3.2 1.7-5.2 1.7-2.3 0-4.5-.9-6-2.4-.9 1.1-1.6 2.3-2.3 3.2l-4.9 5.4c-1.8 2.7.3 5.6 2.5 7 3.9 2.4 9.8 3.1 14.1 1.9 4.6-1.3 7.9-4.7 7.4-9.7-.2-3.4-1.9-6-3.9-8.6zM17 28.3c-.4-1-.6-2.1-.6-3.3a8.7 8.7 0 0 1 6.4-8.4l-1.6-3.5L19 6.2c-1.5-2.8-5-2.5-7.3-1.2-4 2.2-7.5 6.9-8.7 11.3-1.2 4.6.2 9.2 4.7 11.3 3.1 1.3 6.1 1.2 9.3.7zm26.9-17.6c-3.3-3.4-8-4.6-12.1-1.8-2.8 1.8-4.2 4.6-5.5 7.5 4.2.6 7.4 4.2 7.4 8.6 0 .9-.1 1.7-.4 2.5 1.3.2 2.8.3 3.8.4 2.3.4 4.7 1.3 7.1 1.7 3.2.3 4.7-3 4.8-5.6.3-4.6-1.9-10.1-5.1-13.3z"/>
          `,
          style = `
            <svg viewBox="0 0 50 50">
              <style>
                @keyframes rotate {
                  0% {
                    visibility: visible;
                    transform: rotate(0deg) translateZ(0);
                  }
                  100% {
                    transform: rotate(1080deg) translateZ(0);
                  }
                }
                .start {
                  animation: rotate 2.8s ease-in;
                  transform-origin: center;
                  fill: #5daeea;
                  visibility: hidden;
                  will-change: transform;
                }
                .on {
                  animation: rotate 1.8s linear infinite;
                  transform-origin: center;
                  fill: #5daeea;
                  animation-delay: 2.8s;
                  visibility: hidden;
                  will-change: transform;
                }
                .end {
                  animation: rotate 2.8s;
                  transform-origin: center;
                  fill: #9ca2a5;
                  animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
                  will-change: transform;
                }
                .start_timeout {
                  animation: rotate 1.8s linear infinite;
                  transform-origin: center;
                  fill: #5daeea;
                  visibility: hidden;
                  will-change: transform;
                }
                .end_timeout {
                  fill: #9ca2a5;
                }
              </style>
          `;
          if (variables.state_on && variables.timeout < 2000) {
            return `${style}<g class="start">${path}</g><g class="on">${path}</g></svg>`;
          }
          if (variables.state === 'off' && variables.timeout < 2000) {
            return `${style}<g class="end">${path}</g></svg>`;
          }
          if (variables.state_on && variables.timeout > 2000) {
            return `${style}<g class="start_timeout">${path}</g></svg>`;
          } else {
            return `${style}<g class="end_timeout">${path}</g></svg>`;
          }
        ]]]
